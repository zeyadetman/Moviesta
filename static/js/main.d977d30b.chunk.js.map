{"version":3,"sources":["firebase/base.js","apis/index.js","actions/searchAction.js","actions/actionTypes.js","components/Layout/Card.jsx","utils/index.js","components/Layout/Layout.jsx","components/Auth/Login.jsx","components/Home/Home.jsx","reducers/searchReducer.js","reducers/rootReducer.js","store/configureStore.js","serviceWorker.js","index.js"],"names":["fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firestore","settings","timestampsInSnapshots","database","ref","child","API_KEY","MOVIES_DB","axios","create","baseURL","timeout","headers","Content-Type","movieMoreInfo","id","dispatch","get","concat","then","response","type","payload","data","Meta","AntCard","Card","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isModal","movie","handleViewModal","bind","assertThisInitialized","handleClose","movieId","setState","date","_this2","_this$props","poster_path","title","isMovieFav","_this$state$movie","genres","release_date","homepage","overview","vote_average","popularity","runtime","react_default","a","createElement","card","cover","alt","src","actions","rate","count","key","defaultValue","onChange","addMovieFav","icon","onClick","description","modal","visible","onOk","onCancel","style","display","marginBottom","flexWrap","maxWidth","width","marginLeft","className","fontSize","href","rel","moment","format","pluck","join","theme","twoToneColor","Component","connect","search","Header","AntLayout","Content","SubMenu","Menu","Search","Input","InputGroup","Group","Option","Select","cookies","Cookies","Layout","searchType","searchQuery","searchPagesCount","keywordsIds","movies","favs","mode","handleSearch","handlePageChange","fetchMovies","auth","currentUser","uid","collection","doc","exists","favorites","searchMoviesByKeywords","pageCount","results","searchMovies","searchKeywords","keywordsIdsTemp","page","pageResult","toConsumableArray","pageNum","includes","without","set","_this3","layout","alignItems","justifyContent","compact","es_select","value","placeholder","onSearch","enterButton","menu","defaultSelectedKeys","lineHeight","Item","signOut","remove","padding","gridTemplateColumns","gridAutoRows","gridGap","map","console","log","Layout_Card","pagination","textAlign","margin","defaultCurrent","size","pageSize","total","query","keywords","LoginForm","email","password","isLogin","handleSubmit","e","preventDefault","form","validateFields","err","values","signInWithEmailAndPassword","u","user","path","catch","message","error","createUserWithEmailAndPassword","toString","favorits","getFieldDecorator","es_form","onSubmit","minWidth","rules","required","input","prefix","color","valuePropName","initialValue","es_checkbox","es_button","htmlType","Login","Form","Home","status","Date","onAuthStateChanged","components_Layout_Layout","Auth_Login","initialState","combineReducers","arguments","length","undefined","action","objectSpread","total_pages","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","Boolean","location","hostname","match","ReactDOM","render","es","Home_Home","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d977d30b.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst config = {\r\n  apiKey: 'AIzaSyCOGzn37DcUSmXyDAB7W9EK6yJTbNkIj7g',\r\n  authDomain: 'moviesta-z.firebaseapp.com',\r\n  databaseURL: 'https://moviesta-z.firebaseio.com',\r\n  projectId: 'moviesta-z',\r\n  storageBucket: 'moviesta-z.appspot.com',\r\n  messagingSenderId: '471207436083'\r\n};\r\n\r\nexport const fire = firebase.initializeApp(config);\r\nconst firestore = firebase.firestore();\r\nconst settings = {/* your settings... */ timestampsInSnapshots: true };\r\nfirestore.settings(settings);\r\nexport const rootRef = firebase.database().ref();\r\nexport const usersRef = rootRef.child('users');\r\nexport { firestore };","import axios from 'axios';\r\n\r\nexport const API_KEY = 'c01ce69374cd4bcd642c42dcffb14926';\r\nexport const MOVIES_DB = axios.create({\r\n  baseURL: 'https://api.themoviedb.org/3',\r\n  timeout: 600000,\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});","import {\r\n  SEARCH_KEYWORDS,\r\n  SEARCH_MOVIES,\r\n  FETCH_MOVIES_KEYWORDS,\r\n  FETCH_MOVIE_INFO\r\n} from './actionTypes';\r\nimport { MOVIES_DB, API_KEY } from '../apis/index';\r\n\r\nexport const searchKeywords = (query, pageNum) => dispatch => {\r\n  return MOVIES_DB.get(`/search/keyword?api_key=${API_KEY}&query=${query}${pageNum ? `&page=${pageNum}` : ''}`).then(\r\n    response => dispatch({\r\n      type: SEARCH_KEYWORDS,\r\n      payload: response.data\r\n    })\r\n  );\r\n}; //done\r\n\r\nexport const searchMovies = (query, pageNum) => dispatch => {\r\n  return MOVIES_DB.get(`/search/movie?api_key=${API_KEY}${pageNum ? `&page=${pageNum}` : ''}&query=${query}`).then(\r\n    response => dispatch({\r\n      type: SEARCH_MOVIES,\r\n      payload: response.data\r\n    })\r\n  );\r\n}; //done\r\n\r\nexport const searchMoviesByKeywords = (keywords, pageNum) => dispatch => {\r\n  return MOVIES_DB.get(`/discover/movie?api_key=${API_KEY}&sort_by=popularity.desc&\r\n  ${pageNum ? `&page=${pageNum}` : ''}&with_keywords=${keywords}`).then(\r\n    response => dispatch({\r\n      type: FETCH_MOVIES_KEYWORDS,\r\n      payload: response.data\r\n    })\r\n  );\r\n}; //done\r\n\r\nexport const movieMoreInfo = (id) => dispatch => {\r\n  return MOVIES_DB.get(`/movie/${id}?api_key=${API_KEY}`).then(\r\n    response => dispatch({\r\n      type: FETCH_MOVIE_INFO,\r\n      payload: response.data\r\n    })\r\n  );\r\n};","export const SEARCH_KEYWORDS = 'SEARCH_KEYWORDS';\r\nexport const SEARCH_MOVIES = 'SEARCH_MOVIES';\r\nexport const FETCH_MOVIES_KEYWORDS = 'FETCH_MOVIES_KEYWORDS';\r\nexport const FETCH_MOVIE_INFO = 'FETCH_MOVIE_INFO';","import React, { Component } from 'react';\r\nimport { Card as AntCard, Icon, Rate, Modal } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { movieMoreInfo } from '../../actions/searchAction';\r\nimport { formatYear } from '../../utils/index';\r\nimport { pluck } from 'ramda';\r\nimport './card.css';\r\n\r\nconst { Meta } = AntCard;\r\nclass Card extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isModal: false,\r\n      movie: {}\r\n    };\r\n\r\n    this.handleViewModal = this.handleViewModal.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n  }\r\n\r\n  async handleViewModal(movieId) {\r\n    const { movieMoreInfo } = this.props;\r\n    await movieMoreInfo(movieId);\r\n    this.setState({ isModal: true, movie: this.props.movie });\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({ isModal: false });\r\n  }\r\n\r\n  render() {\r\n    const { poster_path, id, title, isMovieFav } = this.props;\r\n    const { genres, release_date, homepage, overview, vote_average, popularity, runtime } = this.state.movie;\r\n    return (\r\n      <div>\r\n        <AntCard\r\n          cover={<img alt=\"example\" src={`https://image.tmdb.org/t/p/w500/${poster_path}`} />}\r\n          actions={[\r\n            <Rate count={1} key={id} defaultValue={isMovieFav ? 1 : 0} onChange={() => this.props.addMovieFav(id)} />,\r\n            <Icon type=\"edit\" key={id} />,\r\n            <Icon type=\"info-circle\" onClick={() => this.handleViewModal(id)} key={id} />\r\n          ]}\r\n        >\r\n          <Meta\r\n            title={title}\r\n            description={null}\r\n          />\r\n        </AntCard>\r\n        <Modal\r\n          title={title}\r\n          visible={this.state.isModal}\r\n          onOk={this.handleClose}\r\n          onCancel={this.handleClose}\r\n        >\r\n          <div style={{\r\n            display: 'flex',\r\n            marginBottom: '15px',\r\n            flexWrap: 'wrap'\r\n          }}>\r\n            <img\r\n              style={{\r\n                maxWidth: '360px',\r\n                width: '100%'\r\n              }}\r\n              alt=\"example\"\r\n              src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\r\n            />\r\n            <div\r\n              style={{\r\n                marginLeft: '15px'\r\n              }}\r\n              className=\"movie__meta\"\r\n            >\r\n              <h1 style={{ fontSize: '2.5em' }}><a href={homepage} rel=\"noopener\">{title}</a></h1>\r\n              <p>{formatYear(release_date) || 'Date Not Found'}</p>\r\n              <p>{genres ? pluck('name', genres).join(' / ') : 'No Genres Found'}</p>\r\n              <p><Icon type=\"clock-circle\" theme=\"twoTone\" twoToneColor=\"#52c41a\" /> {runtime}</p>\r\n              <p><Icon type=\"line-chart\" /> {popularity}</p>\r\n              <p><Icon type=\"notification\" theme=\"twoTone\" twoToneColor=\"#fc3\" /> {vote_average}</p>\r\n            </div>\r\n          </div>\r\n          <p>{overview}</p>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    movie: state.search.movie,\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { movieMoreInfo }\r\n)(Card);","import moment from 'moment';\r\n\r\nexport const formatYear = date => moment(date).format('YYYY');","import React, { Component } from 'react';\r\nimport { Layout as AntLayout, Menu, Icon, Input, Select, Pagination } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  searchKeywords,\r\n  searchMoviesByKeywords,\r\n  searchMovies,\r\n  movieMoreInfo\r\n} from '../../actions/searchAction';\r\nimport { pluck, map, includes, without } from 'ramda';\r\nimport 'antd/dist/antd.css';\r\nimport Card from './Card';\r\nimport { fire, firestore } from '../../firebase/base';\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst { Header, Content } = AntLayout;\r\nconst SubMenu = Menu.SubMenu;\r\nconst Search = Input.Search;\r\nconst InputGroup = Input.Group;\r\nconst Option = Select.Option;\r\nconst pageSize = 20;\r\nconst cookies = new Cookies();\r\nclass Layout extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchType: 'title',\r\n      searchQuery: '',\r\n      searchPagesCount: 0,\r\n      keywordsIds: [],\r\n      movies: [],\r\n      favs: [],\r\n      mode: 'home'\r\n    };\r\n\r\n    this.handleSearch = this.handleSearch.bind(this);\r\n    this.handlePageChange = this.handlePageChange.bind(this);\r\n    this.fetchMovies = this.fetchMovies.bind(this);\r\n    this.addMovieFav = this.addMovieFav.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (fire.auth().currentUser.uid) {\r\n      const ref = firestore.collection('users').doc(fire.auth().currentUser.uid);\r\n      ref.get().then(doc => {\r\n        if (doc.exists) {\r\n          this.setState({ favs: doc.data().favorites });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  async fetchMovies() {\r\n    const { keywordsIds } = this.state;\r\n    await this.props.searchMoviesByKeywords(keywordsIds);\r\n    const { pageCount, results } = this.props;\r\n    this.setState({ searchPagesCount: pageCount * pageSize, movies: results });\r\n  }\r\n\r\n  async handleSearch(searchQuery) {\r\n    await this.setState({ searchQuery });\r\n    const { searchType } = this.state;\r\n\r\n    if (searchType === 'title') {\r\n      await this.props.searchMovies(searchQuery);\r\n      const { pageCount, results } = this.props;\r\n      this.setState({ searchPagesCount: pageCount * 20, movies: results });\r\n    }\r\n    else if (searchType === 'keywords') {\r\n      await this.props.searchKeywords(searchQuery);\r\n      const { pageCount, results } = this.props;\r\n      let keywordsIdsTemp = pluck('id', results);\r\n      for (let page = 2; page <= pageCount; page++) {\r\n        await this.props.searchKeywords(searchQuery, page);\r\n        const pageResult = pluck('id', this.props.results);\r\n        keywordsIdsTemp = [...keywordsIdsTemp, ...pageResult];\r\n      }\r\n\r\n      this.setState({ keywordsIds: keywordsIdsTemp.join('|') }, this.fetchMovies);\r\n    }\r\n  }\r\n\r\n  async handlePageChange(pageNum) {\r\n    const { searchType, searchQuery, keywordsIds } = this.state;\r\n    if (searchType === 'title') {\r\n      await this.props.searchMovies(searchQuery, pageNum);\r\n    }\r\n    else if (searchType === 'keywords') {\r\n      await this.props.searchMoviesByKeywords(keywordsIds, pageNum);\r\n    }\r\n\r\n    this.setState({ movies: this.props.results });\r\n  }\r\n\r\n  async addMovieFav(id) {\r\n    if (this.state.favs && includes(id, this.state.favs)) {\r\n      await this.setState({ favs: without([id], this.state.favs) });\r\n    }\r\n    else {\r\n      await this.state.favs ? this.setState({ favs: [...this.state.favs, id] })\r\n        : this.setState({ favs: [id] });\r\n    }\r\n\r\n    firestore.collection('users').doc(fire.auth().currentUser.uid).set({ favorites: this.state.favs });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <AntLayout className=\"layout\">\r\n        <Header style={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'space-around'\r\n        }}>\r\n          <div className=\"logo\" />\r\n\r\n          <InputGroup\r\n            compact\r\n            style={{\r\n              width: '70%',\r\n              display: 'flex',\r\n              justifyContent: 'center'\r\n            }}\r\n          >\r\n            <Select\r\n              defaultValue={this.state.searchType}\r\n              onChange={(searchType) => this.setState({ searchType })}\r\n              style={{ width: 100 }}\r\n            >\r\n              <Option value=\"title\">Title</Option>\r\n              <Option value=\"keywords\">Keywords</Option>\r\n            </Select>\r\n            <Search\r\n              placeholder=\"Find Movies, TV Shows and more...\"\r\n              onSearch={this.handleSearch}\r\n              style={{ width: 400 }}\r\n              enterButton\r\n            />\r\n          </InputGroup>\r\n\r\n          <Menu\r\n            theme=\"dark\"\r\n            mode=\"horizontal\"\r\n            defaultSelectedKeys={['1']}\r\n            style={{ lineHeight: '34px' }}\r\n          >\r\n            <SubMenu\r\n              key=\"sub1\"\r\n              title={<span><Icon type=\"user\" /><span>User</span></span>}\r\n            >\r\n              <Menu.Item key=\"1\" onClick={() => this.setState({ mode: 'home' })}>Home</Menu.Item>\r\n              <Menu.Item key=\"2\" onClick={() => this.setState({ mode: 'favorite' })}>Favorite List</Menu.Item>\r\n              <Menu.Item key=\"3\" onClick={() => { fire.auth().signOut(); cookies.remove('token'); }}>Sign Out</Menu.Item>\r\n            </SubMenu>\r\n          </Menu>\r\n        </Header>\r\n        <Content style={{ padding: '25px 50px' }}>\r\n          <div>\r\n            <div style={{\r\n              display: 'grid',\r\n              gridTemplateColumns: 'repeat(auto-fill, minmax(250px, 1fr))',\r\n              gridAutoRows: 'auto',\r\n              gridGap: '1rem'\r\n            }}>\r\n              {\r\n                this.state.movies\r\n                  ? map(movie => {\r\n                    console.log(movie);\r\n                    return (\r\n                      <Card\r\n                        key={movie.id}\r\n                        id={movie.id}\r\n                        poster_path={movie.poster_path}\r\n                        title={movie.title}\r\n                        overview={movie.overview}\r\n                        addMovieFav={this.addMovieFav}\r\n                        isMovieFav={this.state.favs ? includes(movie.id, this.state.favs) : false}\r\n                      />);\r\n                  }, this.state.movies)\r\n                  : null\r\n              }\r\n            </div>\r\n            <Pagination\r\n              style={{\r\n                textAlign: 'right',\r\n                margin: '10px 0'\r\n              }}\r\n              defaultCurrent={1}\r\n              onChange={this.handlePageChange}\r\n              size=\"small\"\r\n              pageSize={pageSize}\r\n              total={this.state.searchPagesCount}\r\n            />\r\n          </div>\r\n        </Content>\r\n      </AntLayout >\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    pageCount: state.search.pageCount,\r\n    results: state.search.results\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    searchKeywords,\r\n    searchMoviesByKeywords,\r\n    searchMovies,\r\n    movieMoreInfo\r\n  }\r\n)(Layout);","import React, { Component } from 'react';\r\nimport {\r\n  Form, Icon, Input, Button, Checkbox, message\r\n} from 'antd';\r\nimport { fire, firestore } from '../../firebase/base';\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst cookies = new Cookies();\r\nclass LoginForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      isLogin: true\r\n    };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n        this.setState({ email: values.email, password: values.password }, () => {\r\n          if (this.state.isLogin) {\r\n            fire.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then(\r\n              u => cookies.set('token', u.user.uid, { path: '/' })\r\n            )\r\n              .catch(err => message.error(err.message));\r\n          } else {\r\n            fire.auth().createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n              .then(u => cookies.set('token', u.user.uid, { path: '/' }))\r\n              .then(() => firestore.collection('users').doc(fire.auth().currentUser.uid.toString()).set({ favorits: [] }))\r\n              .catch(err => message.error(err.message));\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Form onSubmit={this.handleSubmit} className=\"login-form\" style={{\r\n        width: '20%',\r\n        minWidth: '250px',\r\n        margin: '25px auto'\r\n      }}>\r\n        <h1>{this.state.isLogin ? 'Sign In' : 'Sign Up'}</h1>\r\n        <Form.Item>\r\n          {getFieldDecorator('email', {\r\n            rules: [{ required: true, message: 'Please input your Email!' }],\r\n          })(\r\n            <Input type=\"email\" prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Email\" />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator('password', {\r\n            rules: [{ required: true, message: 'Please input your Password!' }],\r\n          })(\r\n            <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator('remember', {\r\n            valuePropName: 'checked',\r\n            initialValue: true,\r\n          })(\r\n            <Checkbox>Remember me</Checkbox>\r\n          )}\r\n          <p className=\"login-form-forgot\">Forgot password</p>\r\n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n            {this.state.isLogin ? 'Login' : 'Register'}\r\n          </Button>\r\n          Or <a href=\"#\" onClick={() => this.setState({ isLogin: !this.state.isLogin })}>\r\n            {this.state.isLogin ? 'Register Now' : 'Login Instead'}\r\n          </a>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst Login = Form.create()(LoginForm);\r\nexport default Login;","import React, { Component } from 'react';\r\nimport { fire } from '../../firebase/base';\r\nimport Layout from '../Layout/Layout';\r\nimport Login from '../Auth/Login';\r\n\r\n\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: null,\r\n      status: 'running'\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(this.state.user, new Date(), 'before');\r\n    fire.auth().onAuthStateChanged(user => user ? this.setState({ user, status: 'finish' }) : this.setState({ user: null, status: 'finish' }));\r\n    console.log(this.state.user, new Date(), 'after');\r\n  }\r\n\r\n  render() {\r\n    return this.state.status === 'finish' ? this.state.user ? <Layout /> : <Login /> : <p>waiting...</p>;\r\n  }\r\n}\r\n","import {\r\n  SEARCH_KEYWORDS,\r\n  SEARCH_MOVIES,\r\n  FETCH_MOVIES_KEYWORDS,\r\n  FETCH_MOVIE_INFO\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  pageCount: null,\r\n  results: {},\r\n  movie: {}\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SEARCH_KEYWORDS:\r\n      return {\r\n        ...state,\r\n        results: action.payload.results,\r\n        pageCount: action.payload.total_pages\r\n      };\r\n    case SEARCH_MOVIES:\r\n      return {\r\n        ...state,\r\n        results: action.payload.results,\r\n        pageCount: action.payload.total_pages\r\n      };\r\n    case FETCH_MOVIES_KEYWORDS:\r\n      return {\r\n        ...state,\r\n        results: action.payload.results,\r\n        pageCount: action.payload.total_pages\r\n      };\r\n    case FETCH_MOVIE_INFO:\r\n      return {\r\n        ...state,\r\n        movie: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from 'redux';\r\nimport { default as search } from './searchReducer';\r\n\r\nexport default combineReducers({ search });\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducers/rootReducer';\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Home from './components/Home/Home';\nimport { store } from './store/configureStore';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Home />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}